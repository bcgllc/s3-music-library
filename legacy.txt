parseAndSetData(response) {
  this.data.raw = response.Contents.filter(
    datum => datum.Key.includes(".mp3") || datum.Key.includes(".flac")
  )

  this.data.structured = response.Contents.map(datum => ({
      url: datum.Key,
      artist: datum.Key.split("/")[0],
      album: datum.Key.split("/")[1],
      track: datum.Key.split("/")[2]
  })).filter(item => (
    item.url.includes(".mp3") || 
    item.url.includes(".flac")
  ))

  this.data.urls = this.data.raw.map(datum => datum.Key)

  this.data.artists = _.uniq(
    this.data.raw.map(datum => datum.Key.split("/")[0])
  )

  this.data.albums = _
    .uniq(this.data.raw.map(datum => datum.Key.split("/")[1]))
    .filter(album => album.length > 0)
}

get structuredData() {
  return this.data.structured
}

get urls() {
  return this.data.urls
}

get artists() {
  return this.data.artists
}

get albums() {
  return this.data.albums
}


albumsBy(artist) {
  return _.uniqBy(this.data.structured, item => item.album)
    .filter(item => item.artist === artist)
    .map(item => ({
      artist: item.artist, 
      album: item.album,
      tracks: this.data.structured
        .filter(datum => datum.album === item.album)
        .map(track => ({
          title: track.track,
          url: track.url
        }))
    }))
}

tracksOn(album) {
  return this.data.structured
    .filter(item => item.album === album)
}

